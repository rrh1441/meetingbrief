{"version":3,"sources":["../src/utils/auth.ts","../src/popup/popup.ts"],"sourcesContent":["import { AuthState } from '../types/profile';\n\nconst BASE_URL = 'https://meetingbrief.com';\n\nexport class AuthManager {\n  private static readonly TOKEN_KEY = 'meetingbrief_token';\n  private static readonly USER_KEY = 'meetingbrief_user';\n\n  /**\n   * Get current authentication state\n   */\n  static async getAuthState(): Promise<AuthState> {\n    try {\n      const stored = await chrome.storage.local.get([this.TOKEN_KEY, this.USER_KEY]);\n      \n      if (!stored[this.TOKEN_KEY]) {\n        return { isAuthenticated: false };\n      }\n\n      // Verify token with Better Auth\n      const isValid = await this.verifySession(stored[this.TOKEN_KEY]);\n      \n      if (!isValid) {\n        await this.clearAuth();\n        return { isAuthenticated: false };\n      }\n\n      return {\n        isAuthenticated: true,\n        user: stored[this.USER_KEY],\n        token: stored[this.TOKEN_KEY]\n      };\n    } catch (error) {\n      console.error('Auth state check failed:', error);\n      return { isAuthenticated: false };\n    }\n  }\n\n  /**\n   * Authenticate user via Google OAuth using Better Auth\n   */\n  static async authenticate(): Promise<AuthState> {\n    try {\n      // Use Chrome identity API for OAuth\n      const redirectUrl = chrome.identity.getRedirectURL();\n      \n      const authUrl = `${BASE_URL}/api/auth/google?` + new URLSearchParams({\n        redirect_uri: redirectUrl,\n        response_type: 'code',\n        scope: 'openid email profile'\n      });\n\n      return new Promise((resolve) => {\n        chrome.identity.launchWebAuthFlow({\n          url: authUrl,\n          interactive: true\n        }, async (responseUrl) => {\n          if (chrome.runtime.lastError || !responseUrl) {\n            console.error('OAuth failed:', chrome.runtime.lastError);\n            resolve({ isAuthenticated: false });\n            return;\n          }\n\n          try {\n            // Extract auth code from callback URL\n            const url = new URL(responseUrl);\n            const code = url.searchParams.get('code');\n            \n            if (!code) {\n              throw new Error('No auth code received');\n            }\n\n            // Exchange code for session with Better Auth\n            const tokenResponse = await fetch(`${BASE_URL}/api/auth/callback/google`, {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                code,\n                redirectUrl\n              }),\n              credentials: 'include'\n            });\n\n            if (!tokenResponse.ok) {\n              throw new Error('Token exchange failed');\n            }\n\n            const authData = await tokenResponse.json();\n\n            // Store session data\n            await chrome.storage.local.set({\n              [this.TOKEN_KEY]: authData.token || authData.sessionToken,\n              [this.USER_KEY]: authData.user\n            });\n\n            resolve({\n              isAuthenticated: true,\n              user: authData.user,\n              token: authData.token || authData.sessionToken\n            });\n          } catch (error) {\n            console.error('Auth callback failed:', error);\n            resolve({ isAuthenticated: false });\n          }\n        });\n      });\n    } catch (error) {\n      console.error('Authentication failed:', error);\n      return { isAuthenticated: false };\n    }\n  }\n\n  /**\n   * Sign out user\n   */\n  static async signOut(): Promise<void> {\n    try {\n      const authState = await this.getAuthState();\n      \n      if (authState.isAuthenticated && authState.token) {\n        // Call Better Auth sign out endpoint\n        await fetch(`${BASE_URL}/api/auth/sign-out`, {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${authState.token}`,\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include'\n        });\n      }\n    } catch (error) {\n      console.error('Sign out API call failed:', error);\n    } finally {\n      await this.clearAuth();\n    }\n  }\n\n  /**\n   * Clear local authentication data\n   */\n  private static async clearAuth(): Promise<void> {\n    await chrome.storage.local.remove([this.TOKEN_KEY, this.USER_KEY]);\n  }\n\n  /**\n   * Verify session with Better Auth\n   */\n  private static async verifySession(token: string): Promise<boolean> {\n    try {\n      const response = await fetch(`${BASE_URL}/api/auth/session`, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        credentials: 'include'\n      });\n\n      return response.ok;\n    } catch (error) {\n      console.error('Session verification failed:', error);\n      return false;\n    }\n  }\n\n  /**\n   * Get authenticated fetch headers\n   */\n  static async getAuthHeaders(): Promise<HeadersInit> {\n    const authState = await this.getAuthState();\n    \n    if (authState.isAuthenticated && authState.token) {\n      return {\n        'Authorization': `Bearer ${authState.token}`,\n        'Content-Type': 'application/json'\n      };\n    }\n\n    return {\n      'Content-Type': 'application/json'\n    };\n  }\n\n  /**\n   * Check if user has remaining usage\n   */\n  static async checkUsage(): Promise<{ hasUsage: boolean; remaining: number }> {\n    try {\n      const headers = await this.getAuthHeaders();\n      \n      const response = await fetch(`${BASE_URL}/api/usage`, {\n        method: 'GET',\n        headers,\n        credentials: 'include'\n      });\n\n      if (!response.ok) {\n        throw new Error('Usage check failed');\n      }\n\n      const data = await response.json();\n      return {\n        hasUsage: data.remaining > 0,\n        remaining: data.remaining\n      };\n    } catch (error) {\n      console.error('Usage check failed:', error);\n      return { hasUsage: false, remaining: 0 };\n    }\n  }\n}","import { AuthManager } from '../utils/auth';\nimport { LinkedInProfile, AuthState } from '../types/profile';\n\nclass PopupController {\n  private currentProfile: LinkedInProfile | null = null;\n  private isCreatingBrief = false;\n\n  // DOM elements\n  private loadingDiv!: HTMLElement;\n  private authRequiredDiv!: HTMLElement;\n  private mainInterfaceDiv!: HTMLElement;\n  private statusDiv!: HTMLElement;\n  private usageInfoDiv!: HTMLElement;\n  private profilePreviewDiv!: HTMLElement;\n  private notesTextarea!: HTMLTextAreaElement;\n  private createBriefBtn!: HTMLButtonElement;\n  private signInBtn!: HTMLButtonElement;\n\n  constructor() {\n    this.init();\n  }\n\n  private async init(): Promise<void> {\n    // Wait for DOM to be ready\n    if (document.readyState === 'loading') {\n      document.addEventListener('DOMContentLoaded', () => this.setupElements());\n    } else {\n      this.setupElements();\n    }\n  }\n\n  private setupElements(): void {\n    // Get DOM elements\n    this.loadingDiv = document.getElementById('loading')!;\n    this.authRequiredDiv = document.getElementById('auth-required')!;\n    this.mainInterfaceDiv = document.getElementById('main-interface')!;\n    this.statusDiv = document.getElementById('status')!;\n    this.usageInfoDiv = document.getElementById('usage-info')!;\n    this.profilePreviewDiv = document.getElementById('profile-preview')!;\n    this.notesTextarea = document.getElementById('notes') as HTMLTextAreaElement;\n    this.createBriefBtn = document.getElementById('create-brief-btn') as HTMLButtonElement;\n    this.signInBtn = document.getElementById('sign-in-btn') as HTMLButtonElement;\n\n    // Bind event handlers\n    this.createBriefBtn.addEventListener('click', () => this.handleCreateBrief());\n    this.signInBtn.addEventListener('click', () => this.handleSignIn());\n\n    // Initialize the popup\n    this.initialize();\n  }\n\n  private async initialize(): Promise<void> {\n    try {\n      // Check authentication status\n      const authState = await AuthManager.getAuthState();\n      \n      if (!authState.isAuthenticated) {\n        this.showAuthRequired();\n        return;\n      }\n\n      // Show main interface\n      this.showMainInterface();\n\n      // Load usage information\n      await this.loadUsageInfo();\n\n      // Get current tab and check if it's LinkedIn\n      const tabs = await chrome.tabs.query({ active: true, currentWindow: true });\n      const currentTab = tabs[0];\n\n      if (!currentTab.url?.includes('linkedin.com/in/')) {\n        this.showStatus('Please navigate to a LinkedIn profile page to create a brief.', 'info');\n        return;\n      }\n\n      // Request profile data from content script\n      await this.loadProfileData(currentTab.id!);\n\n    } catch (error) {\n      console.error('Popup initialization error:', error);\n      this.showStatus('Failed to initialize extension. Please try again.', 'error');\n    }\n  }\n\n  private showAuthRequired(): void {\n    this.loadingDiv.classList.add('hidden');\n    this.authRequiredDiv.classList.remove('hidden');\n    this.mainInterfaceDiv.classList.add('hidden');\n  }\n\n  private showMainInterface(): void {\n    this.loadingDiv.classList.add('hidden');\n    this.authRequiredDiv.classList.add('hidden');\n    this.mainInterfaceDiv.classList.remove('hidden');\n  }\n\n  private async handleSignIn(): Promise<void> {\n    try {\n      this.signInBtn.disabled = true;\n      this.signInBtn.innerHTML = '<div class=\"spinner\"></div> Signing in...';\n\n      const authState = await AuthManager.authenticate();\n      \n      if (authState.isAuthenticated) {\n        // Refresh the popup\n        await this.initialize();\n      } else {\n        this.showStatus('Sign in failed. Please try again.', 'error');\n        this.signInBtn.disabled = false;\n        this.signInBtn.innerHTML = 'Sign in with Google';\n      }\n    } catch (error) {\n      console.error('Sign in error:', error);\n      this.showStatus('Sign in failed. Please try again.', 'error');\n      this.signInBtn.disabled = false;\n      this.signInBtn.innerHTML = 'Sign in with Google';\n    }\n  }\n\n  private async loadUsageInfo(): Promise<void> {\n    try {\n      const usage = await AuthManager.checkUsage();\n      \n      if (usage.remaining <= 0) {\n        this.usageInfoDiv.innerHTML = `\n          You have reached your monthly brief limit. \n          <a href=\"https://meetingbrief.com/pricing\" target=\"_blank\" style=\"color: #0073b1; text-decoration: underline;\">\n            Upgrade your plan\n          </a> to create more briefs.\n        `;\n        this.usageInfoDiv.classList.remove('hidden');\n        this.createBriefBtn.disabled = true;\n      } else if (usage.remaining <= 2) {\n        this.usageInfoDiv.innerHTML = `\n          ⚠️ You have ${usage.remaining} brief${usage.remaining === 1 ? '' : 's'} remaining this month.\n        `;\n        this.usageInfoDiv.classList.remove('hidden');\n      } else {\n        this.usageInfoDiv.classList.add('hidden');\n      }\n    } catch (error) {\n      console.error('Usage check failed:', error);\n    }\n  }\n\n  private async loadProfileData(tabId: number): Promise<void> {\n    try {\n      // Request profile data from content script\n      const response = await chrome.tabs.sendMessage(tabId, {\n        type: 'PROFILE_EXTRACTED'\n      });\n\n      if (response.profile) {\n        this.currentProfile = response.profile;\n        this.renderProfile(response.profile);\n        this.createBriefBtn.disabled = false;\n      } else {\n        // Profile not ready yet, wait a bit and try again\n        setTimeout(() => this.loadProfileData(tabId), 2000);\n      }\n    } catch (error) {\n      console.error('Profile loading error:', error);\n      this.showStatus('Could not extract profile data. Please refresh the page and try again.', 'error');\n    }\n  }\n\n  private renderProfile(profile: LinkedInProfile): void {\n    const avatar = profile.imageUrl \n      ? `<img src=\"${profile.imageUrl}\" alt=\"${profile.fullName}\" class=\"profile-avatar\">`\n      : `<div class=\"profile-avatar\">${profile.fullName.charAt(0).toUpperCase()}</div>`;\n\n    this.profilePreviewDiv.className = 'profile-preview';\n    this.profilePreviewDiv.innerHTML = `\n      <div class=\"profile-header\">\n        ${avatar}\n        <div class=\"profile-info\">\n          <h3>${profile.fullName}</h3>\n          <p>${profile.headline || profile.position || 'LinkedIn Professional'}</p>\n        </div>\n      </div>\n      <div class=\"profile-details\">\n        ${profile.company ? `<div><strong>Company:</strong> ${profile.company}</div>` : ''}\n        ${profile.location ? `<div><strong>Location:</strong> ${profile.location}</div>` : ''}\n        ${profile.experience && profile.experience.length > 0 ? \n          `<div><strong>Recent Experience:</strong> ${profile.experience[0].title} at ${profile.experience[0].company}</div>` : ''\n        }\n      </div>\n    `;\n  }\n\n  private async handleCreateBrief(): Promise<void> {\n    if (this.isCreatingBrief || !this.currentProfile) return;\n\n    try {\n      this.isCreatingBrief = true;\n      this.createBriefBtn.disabled = true;\n      this.createBriefBtn.innerHTML = '<div class=\"spinner\"></div> Creating Brief...';\n\n      const notes = this.notesTextarea.value.trim();\n\n      // Send creation request to background script\n      const response = await chrome.runtime.sendMessage({\n        type: 'CREATE_BRIEF',\n        data: {\n          profile: this.currentProfile,\n          notes: notes\n        }\n      });\n\n      if (response.success) {\n        this.showStatus(`\n          🎉 Brief created successfully! \n          <a href=\"${response.redirectUrl}\" target=\"_blank\" style=\"color: #155724; text-decoration: underline;\">\n            Click here to view\n          </a>\n        `, 'success');\n        \n        // Update usage info\n        await this.loadUsageInfo();\n        \n        // Clear notes\n        this.notesTextarea.value = '';\n      } else {\n        if (response.requiresAuth) {\n          this.showAuthRequired();\n        } else if (response.requiresUpgrade) {\n          this.showStatus(`\n            ${response.error} \n            <a href=\"https://meetingbrief.com/pricing\" target=\"_blank\" style=\"color: #721c24; text-decoration: underline;\">\n              Upgrade now\n            </a>\n          `, 'error');\n        } else {\n          this.showStatus(response.error || 'Failed to create brief', 'error');\n        }\n      }\n    } catch (error) {\n      console.error('Brief creation error:', error);\n      this.showStatus('Failed to create brief. Please try again.', 'error');\n    } finally {\n      this.isCreatingBrief = false;\n      this.createBriefBtn.disabled = false;\n      this.createBriefBtn.innerHTML = `\n        <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n          <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8l-6-6z\"/>\n          <polyline points=\"14,2 14,8 20,8\"/>\n          <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"/>\n          <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"/>\n          <polyline points=\"10,9 9,9 8,9\"/>\n        </svg>\n        Create Meeting Brief\n      `;\n    }\n  }\n\n  private showStatus(message: string, type: 'info' | 'error' | 'success'): void {\n    this.statusDiv.className = `status ${type}`;\n    this.statusDiv.innerHTML = message;\n    this.statusDiv.classList.remove('hidden');\n\n    // Auto-hide success/info messages after 5 seconds\n    if (type !== 'error') {\n      setTimeout(() => {\n        this.statusDiv.classList.add('hidden');\n      }, 5000);\n    }\n  }\n}\n\n// Initialize popup when DOM is ready\nnew PopupController(); "],"mappings":"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","names":[]}